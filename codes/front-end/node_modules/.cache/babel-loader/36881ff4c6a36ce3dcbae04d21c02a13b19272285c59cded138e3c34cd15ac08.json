{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      usernameError: '',\n      passwordError: '',\n      registrationUsernameError: '',\n      registrationPasswordError: '',\n      userData: {\n        username: '',\n        password: '',\n        nickname: '',\n        gender: '',\n        telephone: ''\n      }\n    };\n  },\n  mounted() {\n    const signInBtn = document.getElementById(\"signIn\");\n    const signUpBtn = document.getElementById(\"signUp\");\n    const container = document.querySelector(\".container\");\n    signInBtn.addEventListener(\"click\", () => {\n      container.classList.remove(\"right-panel-active\");\n    });\n    signUpBtn.addEventListener(\"click\", () => {\n      container.classList.add(\"right-panel-active\");\n    });\n  },\n  methods: {\n    validateUsername(form) {\n      const usernamePattern = /^[a-zA-Z0-9]+$/;\n      if (form === 'login') {\n        if (this.username.length < 3 || this.username.length > 15 || !usernamePattern.test(this.username)) {\n          this.usernameError = '用户名应为3到15个字符，只能包含字母和数字';\n        } else {\n          this.usernameError = '';\n        }\n      } else {\n        if (this.userData.username.length < 3 || this.userData.username.length > 15 || !usernamePattern.test(this.userData.username)) {\n          this.registrationUsernameError = '用户名应为3到15个字符，只能包含字母和数字';\n        } else {\n          this.registrationUsernameError = '';\n        }\n      }\n    },\n    validatePassword(form) {\n      const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{8,20}$/;\n      if (form === 'login') {\n        if (this.password.length < 8 || this.password.length > 20 || !passwordPattern.test(this.password)) {\n          this.passwordError = '密码应为8到20个字符，必须包含至少一个字母和一个数字';\n        } else {\n          this.passwordError = '';\n        }\n      } else {\n        if (this.userData.password.length < 8 || this.userData.password.length > 20 || !passwordPattern.test(this.userData.password)) {\n          this.registrationPasswordError = '密码应为8到20个字符，必须包含至少一个字母和一个数字';\n        } else {\n          this.registrationPasswordError = '';\n        }\n      }\n    },\n    login() {\n      this.validateUsername('login');\n      this.validatePassword('login');\n      if (this.usernameError || this.passwordError) {\n        return;\n      }\n      const requestData = new URLSearchParams();\n      requestData.append('username', this.username);\n      requestData.append('password', this.password);\n      axios.post('http://localhost:8000/tms/login', requestData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log('Response data:', response.data); // 添加调试信息\n        if (response.data.code === 200 && response.data.message === \"登录成功\") {\n          const token = response.data.data.access_token;\n          console.log(\"获取到的token是：\" + token);\n          sessionStorage.setItem('access_token', token);\n          this.$router.push('/users'); // 登录成功后导航到受保护页面\n        } else if (response.data.message === \"用户名不存在\") {\n          /*alert('用户名输入不正确，请重新输入。');*/\n          this.usernameError = '用户名输入不正确，请重新输入。';\n        } else if (response.data.message === \"用户密码错误\") {\n          /*alert('密码输入不正确，请重新输入。');*/\n          this.passwordError = '密码输入不正确，请重新输入。';\n        }\n      }).catch(error => {\n        console.error('Login request error:', error); // 添加错误处理\n        alert('登录请求失败，请稍后重试。');\n      });\n    },\n    registerUser() {\n      this.validateUsername('register');\n      this.validatePassword('register');\n      if (this.registrationUsernameError || this.registrationPasswordError) {\n        return;\n      }\n      axios.post('http://localhost:8000/tms/register', this.userData).then(response => {\n        this.registrationResult = response.data.message;\n      }).catch(error => {\n        this.registrationResult = '注册失败：' + error.response.data.message;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","usernameError","passwordError","registrationUsernameError","registrationPasswordError","userData","nickname","gender","telephone","mounted","signInBtn","document","getElementById","signUpBtn","container","querySelector","addEventListener","classList","remove","add","methods","validateUsername","form","usernamePattern","length","test","validatePassword","passwordPattern","login","requestData","URLSearchParams","append","post","headers","then","response","console","log","code","message","token","access_token","sessionStorage","setItem","$router","push","catch","error","alert","registerUser","registrationResult"],"sources":["src/views/Element/LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-all\">\r\n    <div class=\"container right-panel-active\">\r\n      <!-- 注册 -->\r\n      <div class=\"container__form container--signup\">\r\n        <form @submit.prevent=\"registerUser\" action=\"#\" class=\"form\" id=\"form1\">\r\n          <h2 class=\"form__title\">注册</h2>\r\n          <input type=\"text\" placeholder=\"用户名\" class=\"input\" v-model=\"userData.username\"\r\n                 minlength=\"3\" maxlength=\"15\" pattern=\"[a-zA-Z0-9]+\" @input=\"validateUsername('userData')\" required/>\r\n          <span v-if=\"registrationUsernameError\" class=\"error-message\">{{ registrationUsernameError }}</span>\r\n          <input type=\"password\" placeholder=\"密码\" class=\"input\" v-model=\"userData.password\"\r\n                 minlength=\"8\" maxlength=\"20\" pattern=\"(?=.*[a-zA-Z])(?=.*[0-9]).{8,20}\" @input=\"validatePassword('userData')\" required/>\r\n          <span v-if=\"registrationPasswordError\" class=\"error-message\">{{ registrationPasswordError }}</span>\r\n          <input type=\"text\" placeholder=\"昵称\" class=\"input\" v-model=\"userData.nickname\" required/>\r\n          <div class=\"form-group\">\r\n            <label for=\"gender\">性别：</label>\r\n            <select id=\"gender\" v-model=\"userData.gender\" required>\r\n              <option value=\"男\">男</option>\r\n              <option value=\"女\">女</option>\r\n              <option value=\"保密\">保密</option>\r\n            </select>\r\n          </div>\r\n          <input type=\"text\" placeholder=\"电话\" class=\"input\" v-model=\"userData.telephone\" required/>\r\n          <button type=\"submit\" class=\"btn\">注册</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- 登录 -->\r\n      <div id=\"app\" class=\"container__form container--signin\">\r\n        <form action=\"#\" class=\"form\" id=\"form2\" @submit.prevent=\"login\">\r\n          <h2 class=\"form__title\">登录</h2>\r\n          <input type=\"text\" placeholder=\"用户名\" class=\"input\" v-model=\"username\"\r\n                 minlength=\"3\" maxlength=\"15\" pattern=\"[a-zA-Z0-9]+\" @input=\"validateUsername('login')\" required/>\r\n          <span v-if=\"usernameError\" class=\"error-message\">\r\n            <i class=\"fas fa-exclamation-circle\"></i> {{ usernameError }}\r\n          </span>\r\n          <input type=\"password\" placeholder=\"密码\" class=\"input\" v-model=\"password\"\r\n                 minlength=\"8\" maxlength=\"20\" pattern=\"(?=.*[a-zA-Z])(?=.*[0-9]).{8,20}\" @input=\"validatePassword('login')\" required/>\r\n          <span v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</span>\r\n          <button class=\"btn\" type=\"submit\">登录</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- 覆盖层 -->\r\n      <div class=\"container__overlay\">\r\n        <div class=\"overlay\">\r\n          <div class=\"overlay__panel overlay--left\">\r\n            <button class=\"btn\" id=\"signIn\">登录</button>\r\n          </div>\r\n          <div class=\"overlay__panel overlay--right\">\r\n            <button class=\"btn\" id=\"signUp\">注册</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      usernameError: '',\r\n      passwordError: '',\r\n      registrationUsernameError: '',\r\n      registrationPasswordError: '',\r\n      userData: {\r\n        username: '',\r\n        password: '',\r\n        nickname: '',\r\n        gender: '',\r\n        telephone: ''\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    const signInBtn = document.getElementById(\"signIn\");\r\n    const signUpBtn = document.getElementById(\"signUp\");\r\n    const container = document.querySelector(\".container\");\r\n\r\n    signInBtn.addEventListener(\"click\", () => {\r\n      container.classList.remove(\"right-panel-active\");\r\n    });\r\n\r\n    signUpBtn.addEventListener(\"click\", () => {\r\n      container.classList.add(\"right-panel-active\");\r\n    });\r\n  },\r\n  methods: {\r\n    validateUsername(form) {\r\n      const usernamePattern = /^[a-zA-Z0-9]+$/;\r\n      if (form === 'login') {\r\n        if (this.username.length < 3 || this.username.length > 15 || !usernamePattern.test(this.username)) {\r\n          this.usernameError = '用户名应为3到15个字符，只能包含字母和数字';\r\n        } else {\r\n          this.usernameError = '';\r\n        }\r\n      } else {\r\n        if (this.userData.username.length < 3 || this.userData.username.length > 15 || !usernamePattern.test(this.userData.username)) {\r\n          this.registrationUsernameError = '用户名应为3到15个字符，只能包含字母和数字';\r\n        } else {\r\n          this.registrationUsernameError = '';\r\n        }\r\n      }\r\n    },\r\n    validatePassword(form) {\r\n      const passwordPattern = /^(?=.*[a-zA-Z])(?=.*[0-9]).{8,20}$/;\r\n      if (form === 'login') {\r\n        if (this.password.length < 8 || this.password.length > 20 || !passwordPattern.test(this.password)) {\r\n          this.passwordError = '密码应为8到20个字符，必须包含至少一个字母和一个数字';\r\n        } else {\r\n          this.passwordError = '';\r\n        }\r\n      } else {\r\n        if (this.userData.password.length < 8 || this.userData.password.length > 20 || !passwordPattern.test(this.userData.password)) {\r\n          this.registrationPasswordError = '密码应为8到20个字符，必须包含至少一个字母和一个数字';\r\n        } else {\r\n          this.registrationPasswordError = '';\r\n        }\r\n      }\r\n    },\r\n    login() {\r\n      this.validateUsername('login');\r\n      this.validatePassword('login');\r\n\r\n      if (this.usernameError || this.passwordError) {\r\n        return;\r\n      }\r\n\r\n      const requestData = new URLSearchParams();\r\n      requestData.append('username', this.username);\r\n      requestData.append('password', this.password);\r\n\r\n      axios.post('http://localhost:8000/tms/login', requestData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      }).then(response => {\r\n        console.log('Response data:', response.data); // 添加调试信息\r\n        if (response.data.code === 200 && response.data.message === \"登录成功\") {\r\n          const token = response.data.data.access_token;\r\n          console.log(\"获取到的token是：\" + token);\r\n          sessionStorage.setItem('access_token', token);\r\n          this.$router.push('/users'); // 登录成功后导航到受保护页面\r\n        } else if (response.data.message === \"用户名不存在\") {\r\n          /*alert('用户名输入不正确，请重新输入。');*/\r\n          this.usernameError = '用户名输入不正确，请重新输入。';\r\n        } else if (response.data.message === \"用户密码错误\") {\r\n          /*alert('密码输入不正确，请重新输入。');*/\r\n          this.passwordError = '密码输入不正确，请重新输入。';\r\n        }\r\n      }).catch(error => {\r\n        console.error('Login request error:', error); // 添加错误处理\r\n        alert('登录请求失败，请稍后重试。');\r\n      });\r\n\r\n    },\r\n    registerUser() {\r\n      this.validateUsername('register');\r\n      this.validatePassword('register');\r\n\r\n      if (this.registrationUsernameError || this.registrationPasswordError) {\r\n        return;\r\n      }\r\n\r\n      axios.post('http://localhost:8000/tms/register', this.userData)\r\n          .then(response => {\r\n            this.registrationResult = response.data.message;\r\n          })\r\n          .catch(error => {\r\n            this.registrationResult = '注册失败：' + error.response.data.message;\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n:root {\r\n  /* 颜色 */\r\n  --white: #e9e9e9;\r\n  --gray: #333;\r\n  --blue: #0367a6;\r\n  --lightblue: #008997;\r\n\r\n  /* 圆角 */\r\n  --button-radius: 0.7rem;\r\n\r\n  /* 尺寸 */\r\n  --max-width: 758px;\r\n  --max-height: 420px;\r\n\r\n  font-size: 16px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n  Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n}\r\n\r\n.error-message {\r\n  font-size: 0.8rem; /* 调整字体大小为 0.8rem，根据需要进行调整 */\r\n  color: #ff0000; /* 设置警告符号和错误信息的颜色 */\r\n}\r\n\r\n\r\n\r\n.container-all {\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n  height: 100vh; /* 使用视口高度撑开容器 */\r\n  margin-top: -70px; /* 往上移动 50px，根据需要调整 */\r\n}\r\n\r\n.container.right-panel-active {\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n  background-color: var(--white);\r\n  //background: url(\"https://res.cloudinary.com/dbhnlktrv/image/upload/v1599997626/background_oeuhe7.jpg\");\r\n  /* 决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动。 */\r\n  /* https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-attachment */\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: grid;\r\n  //height: 100vh;\r\n  place-items: center;\r\n}\r\n\r\n.form__title {\r\n  font-weight: 300;\r\n  margin: 0;\r\n  margin-bottom: 1.25rem;\r\n}\r\n\r\n.link {\r\n  color: var(--gray);\r\n  font-size: 0.9rem;\r\n  margin: 1.5rem 0;\r\n  text-decoration: none;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  justify-content: center; /* 水平居中 */\r\n  align-items: center; /* 垂直居中 */\r\n  background-color: var(--white);\r\n  border-radius: var(--button-radius);\r\n  box-shadow: 0 0.9rem 1.7rem rgba(0, 0, 0, 0.25),\r\n  0 0.7rem 0.7rem rgba(0, 0, 0, 0.22);\r\n  height: var(--max-height);\r\n  max-width: var(--max-width);\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.container__form {\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.container--signin {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .container--signin {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.container--signup {\r\n  left: 0;\r\n  opacity: 0;\r\n  width: 50%;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .container--signup {\r\n  animation: show 0.6s;\r\n  opacity: 1;\r\n  transform: translateX(100%);\r\n  z-index: 5;\r\n}\r\n\r\n.container__overlay {\r\n  height: 100%;\r\n  left: 50%;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 50%;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .container__overlay {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background-color: var(--lightblue);\r\n  background: url(\"https://res.cloudinary.com/dbhnlktrv/image/upload/v1599997626/background_oeuhe7.jpg\");\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  height: 100%;\r\n  left: -100%;\r\n  position: relative;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 200%;\r\n}\r\n\r\n.container.right-panel-active .overlay {\r\n  transform: translateX(50%);\r\n}\r\n\r\n.overlay__panel {\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 0;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 50%;\r\n}\r\n\r\n.overlay--left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay--left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay--right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay--right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.btn {\r\n  background-color: var(--blue);\r\n  background-image: linear-gradient(90deg, var(--blue) 0%, var(--lightblue) 74%);\r\n  border-radius: 20px;\r\n  border: 1px solid var(--blue);\r\n  color: var(--white);\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  letter-spacing: 0.1rem;\r\n  padding: 0.9rem 4rem;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\n.form > .btn {\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.btn:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n.btn:focus {\r\n  outline: none;\r\n}\r\n\r\n.form {\r\n  background-color: var(--white);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 3rem;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n#form2 {\r\n  margin-top: -70px;\r\n}\r\n\r\n.input {\r\n  background-color: #fff;\r\n  border: none;\r\n  padding: 0.9rem 0.9rem;\r\n  margin: 0.5rem 0;\r\n  width: 100%;\r\n}\r\n\r\n@keyframes show {\r\n  0%,\r\n  49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n  50%,\r\n  100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;;AA2DA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,aAAA;MACAC,aAAA;MACAC,yBAAA;MACAC,yBAAA;MACAC,QAAA;QACAN,QAAA;QACAC,QAAA;QACAM,QAAA;QACAC,MAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,SAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,MAAAC,SAAA,GAAAF,QAAA,CAAAC,cAAA;IACA,MAAAE,SAAA,GAAAH,QAAA,CAAAI,aAAA;IAEAL,SAAA,CAAAM,gBAAA;MACAF,SAAA,CAAAG,SAAA,CAAAC,MAAA;IACA;IAEAL,SAAA,CAAAG,gBAAA;MACAF,SAAA,CAAAG,SAAA,CAAAE,GAAA;IACA;EACA;EACAC,OAAA;IACAC,iBAAAC,IAAA;MACA,MAAAC,eAAA;MACA,IAAAD,IAAA;QACA,SAAAvB,QAAA,CAAAyB,MAAA,aAAAzB,QAAA,CAAAyB,MAAA,UAAAD,eAAA,CAAAE,IAAA,MAAA1B,QAAA;UACA,KAAAE,aAAA;QACA;UACA,KAAAA,aAAA;QACA;MACA;QACA,SAAAI,QAAA,CAAAN,QAAA,CAAAyB,MAAA,aAAAnB,QAAA,CAAAN,QAAA,CAAAyB,MAAA,UAAAD,eAAA,CAAAE,IAAA,MAAApB,QAAA,CAAAN,QAAA;UACA,KAAAI,yBAAA;QACA;UACA,KAAAA,yBAAA;QACA;MACA;IACA;IACAuB,iBAAAJ,IAAA;MACA,MAAAK,eAAA;MACA,IAAAL,IAAA;QACA,SAAAtB,QAAA,CAAAwB,MAAA,aAAAxB,QAAA,CAAAwB,MAAA,UAAAG,eAAA,CAAAF,IAAA,MAAAzB,QAAA;UACA,KAAAE,aAAA;QACA;UACA,KAAAA,aAAA;QACA;MACA;QACA,SAAAG,QAAA,CAAAL,QAAA,CAAAwB,MAAA,aAAAnB,QAAA,CAAAL,QAAA,CAAAwB,MAAA,UAAAG,eAAA,CAAAF,IAAA,MAAApB,QAAA,CAAAL,QAAA;UACA,KAAAI,yBAAA;QACA;UACA,KAAAA,yBAAA;QACA;MACA;IACA;IACAwB,MAAA;MACA,KAAAP,gBAAA;MACA,KAAAK,gBAAA;MAEA,SAAAzB,aAAA,SAAAC,aAAA;QACA;MACA;MAEA,MAAA2B,WAAA,OAAAC,eAAA;MACAD,WAAA,CAAAE,MAAA,kBAAAhC,QAAA;MACA8B,WAAA,CAAAE,MAAA,kBAAA/B,QAAA;MAEAH,KAAA,CAAAmC,IAAA,oCAAAH,WAAA;QACAI,OAAA;UACA;QACA;MACA,GAAAC,IAAA,CAAAC,QAAA;QACAC,OAAA,CAAAC,GAAA,mBAAAF,QAAA,CAAArC,IAAA;QACA,IAAAqC,QAAA,CAAArC,IAAA,CAAAwC,IAAA,YAAAH,QAAA,CAAArC,IAAA,CAAAyC,OAAA;UACA,MAAAC,KAAA,GAAAL,QAAA,CAAArC,IAAA,CAAAA,IAAA,CAAA2C,YAAA;UACAL,OAAA,CAAAC,GAAA,iBAAAG,KAAA;UACAE,cAAA,CAAAC,OAAA,iBAAAH,KAAA;UACA,KAAAI,OAAA,CAAAC,IAAA;QACA,WAAAV,QAAA,CAAArC,IAAA,CAAAyC,OAAA;UACA;UACA,KAAAtC,aAAA;QACA,WAAAkC,QAAA,CAAArC,IAAA,CAAAyC,OAAA;UACA;UACA,KAAArC,aAAA;QACA;MACA,GAAA4C,KAAA,CAAAC,KAAA;QACAX,OAAA,CAAAW,KAAA,yBAAAA,KAAA;QACAC,KAAA;MACA;IAEA;IACAC,aAAA;MACA,KAAA5B,gBAAA;MACA,KAAAK,gBAAA;MAEA,SAAAvB,yBAAA,SAAAC,yBAAA;QACA;MACA;MAEAP,KAAA,CAAAmC,IAAA,4CAAA3B,QAAA,EACA6B,IAAA,CAAAC,QAAA;QACA,KAAAe,kBAAA,GAAAf,QAAA,CAAArC,IAAA,CAAAyC,OAAA;MACA,GACAO,KAAA,CAAAC,KAAA;QACA,KAAAG,kBAAA,aAAAH,KAAA,CAAAZ,QAAA,CAAArC,IAAA,CAAAyC,OAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}