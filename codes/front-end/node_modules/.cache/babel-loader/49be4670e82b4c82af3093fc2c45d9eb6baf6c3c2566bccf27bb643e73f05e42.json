{"ast":null,"code":"// 在需要发送 HTTP 请求的组件中引入 Axios\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      isCollapse: true,\n      formInline: {\n        user: '',\n        region: ''\n      }\n    };\n  },\n  methods: {\n    handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    onSubmit() {\n      // 构造请求数据\n      const requestData = {\n        id: this.formInline.id,\n        username: this.formInline.username,\n        gender: this.formInline.gender\n      };\n\n      // 发送 POST 请求到后端\n      axios.post('/users?id=${this.id}', requestData).then(response => {\n        // 请求成功，处理后端返回的数据\n        console.log('Response from server:', response.data);\n      }).catch(error => {\n        // 请求失败，处理错误情况\n        console.error('Error:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isCollapse","formInline","user","region","methods","handleOpen","key","keyPath","console","log","handleClose","onSubmit","requestData","id","username","gender","post","then","response","catch","error"],"sources":["src/views/Element/ShowView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n      <el-form-item label=\"用户id\">\r\n        <el-input v-model=\"formInline.id\" placeholder=\"id\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"formInline.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\">\r\n        <el-select v-model=\"formInline.region\" placeholder=\"性别\">\r\n          <el-option label=\"男\" value=\"shanghai\"></el-option>\r\n          <el-option label=\"女\" value=\"beijing\"></el-option>\r\n          <el-option label=\"保密\" value=\"beijing\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n<!--  导航菜单  -->\r\n    <el-row class=\"tac\">\r\n      <el-col :span=\"3\">\r\n        <el-menu\r\n            default-active=\"2\"\r\n            class=\"el-menu-vertical-demo\"\r\n            @open=\"handleOpen\"\r\n            @close=\"handleClose\">\r\n          <el-submenu index=\"1\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-location\"></i>\r\n              <span>任务管理系统</span>\r\n            </template>\r\n            <el-menu-item-group>\r\n\r\n              <el-menu-item index=\"1-1\">选项1</el-menu-item>\r\n              <el-menu-item index=\"1-2\">选项2</el-menu-item>\r\n            </el-menu-item-group>\r\n\r\n            <el-submenu index=\"1-4\">\r\n\r\n              \r\n            </el-submenu>\r\n          </el-submenu>\r\n          <el-menu-item index=\"2\">\r\n            <i class=\"el-icon-menu\"></i>\r\n            <span slot=\"title\">导航二</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"3\" disabled>\r\n            <i class=\"el-icon-document\"></i>\r\n            <span slot=\"title\">导航三</span>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"4\">\r\n            <i class=\"el-icon-setting\"></i>\r\n            <span slot=\"title\">导航四</span>\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n// 在需要发送 HTTP 请求的组件中引入 Axios\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      isCollapse: true,\r\n      formInline: {\r\n        user: '',\r\n        region: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleOpen(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    handleClose(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    onSubmit() {\r\n      // 构造请求数据\r\n      const requestData = {\r\n        id: this.formInline.id,\r\n        username: this.formInline.username,\r\n        gender: this.formInline.gender\r\n      };\r\n\r\n      // 发送 POST 请求到后端\r\n      axios.post('/users?id=${this.id}', requestData)\r\n          .then(response => {\r\n            // 请求成功，处理后端返回的数据\r\n            console.log('Response from server:', response.data);\r\n          })\r\n          .catch(error => {\r\n            // 请求失败，处理错误情况\r\n            console.error('Error:', error);\r\n          });\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n"],"mappings":"AAkEA;AACA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;QACAC,IAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACAG,YAAAJ,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACAI,SAAA;MACA;MACA,MAAAC,WAAA;QACAC,EAAA,OAAAZ,UAAA,CAAAY,EAAA;QACAC,QAAA,OAAAb,UAAA,CAAAa,QAAA;QACAC,MAAA,OAAAd,UAAA,CAAAc;MACA;;MAEA;MACAjB,KAAA,CAAAkB,IAAA,yBAAAJ,WAAA,EACAK,IAAA,CAAAC,QAAA;QACA;QACAV,OAAA,CAAAC,GAAA,0BAAAS,QAAA,CAAAnB,IAAA;MACA,GACAoB,KAAA,CAAAC,KAAA;QACA;QACAZ,OAAA,CAAAY,KAAA,WAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}