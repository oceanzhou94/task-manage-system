{"ast":null,"code":"// 在需要发送 HTTP 请求的组件中引入 Axios\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      isCollapse: true,\n      formInline: {\n        user: '',\n        region: ''\n      }\n    };\n  },\n  methods: {\n    // 导航栏\n    handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    //表格\n    handleEdit(index, row) {\n      console.log(index, row);\n    },\n    handleDelete(index, row) {\n      console.log(index, row);\n    },\n    onSubmit() {\n      // 构造请求数据\n      const requestData = {\n        id: this.formInline.id,\n        username: this.formInline.username,\n        gender: this.formInline.gender\n      };\n\n      // 发送 POST 请求到后端\n      axios.post('/users?id=${this.id}', requestData).then(response => {\n        // 请求成功，处理后端返回的数据\n        console.log('Response from server:', response.data);\n      }).catch(error => {\n        // 请求失败，处理错误情况\n        console.error('Error:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isCollapse","formInline","user","region","methods","handleOpen","key","keyPath","console","log","handleClose","handleEdit","index","row","handleDelete","onSubmit","requestData","id","username","gender","post","then","response","catch","error"],"sources":["src/views/Element/ShowView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n      <el-form-item label=\"用户id\">\r\n        <el-input v-model=\"formInline.id\" placeholder=\"id\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"formInline.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\">\r\n        <el-select v-model=\"formInline.region\" placeholder=\"性别\">\r\n          <el-option label=\"男\" value=\"shanghai\"></el-option>\r\n          <el-option label=\"女\" value=\"beijing\"></el-option>\r\n          <el-option label=\"保密\" value=\"beijing\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n<!--  导航菜单  -->\r\n    <el-row class=\"tac\">\r\n      <el-col :span=\"3\" style=\"margin-top: 30px\">\r\n        <el-menu\r\n            default-active=\"2\"\r\n            class=\"el-menu-vertical-demo\"\r\n            @open=\"handleOpen\"\r\n            @close=\"handleClose\">\r\n          <el-submenu index=\"1\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-location\"></i>\r\n              <span>任务管理系统</span>\r\n            </template>\r\n            <el-menu-item-group>\r\n              <el-menu-item index=\"1-1\">用户管理</el-menu-item>\r\n              <el-menu-item index=\"1-2\">任务管理</el-menu-item>\r\n            </el-menu-item-group>\r\n          </el-submenu>\r\n        </el-menu>\r\n      </el-col>\r\n    </el-row>\r\n\r\n<!--    table表格-->\r\n    <el-table\r\n        :data=\"tableData\"\r\n        style=\"width: 50%;margin-left: 260px;margin-top: 5px\">\r\n      <el-table-column\r\n          label=\"日期\"\r\n          width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\"></i>\r\n          <span style=\"margin-left: 10px\">{{ scope.row.date }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column\r\n          label=\"姓名\"\r\n          width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <el-popover trigger=\"hover\" placement=\"top\">\r\n            <p>姓名: {{ scope.row.name }}</p>\r\n            <p>住址: {{ scope.row.address }}</p>\r\n            <div slot=\"reference\" class=\"name-wrapper\">\r\n              <el-tag size=\"medium\">{{ scope.row.name }}</el-tag>\r\n            </div>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n              size=\"mini\"\r\n              @click=\"handleEdit(scope.$index, scope.row)\">编辑</el-button>\r\n          <el-button\r\n              size=\"mini\"\r\n              type=\"danger\"\r\n              @click=\"handleDelete(scope.$index, scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 在需要发送 HTTP 请求的组件中引入 Axios\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      isCollapse: true,\r\n      formInline: {\r\n        user: '',\r\n        region: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 导航栏\r\n    handleOpen(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    handleClose(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    //表格\r\n    handleEdit(index, row) {\r\n      console.log(index, row);\r\n    },\r\n    handleDelete(index, row) {\r\n      console.log(index, row);\r\n    },\r\n    onSubmit() {\r\n      // 构造请求数据\r\n      const requestData = {\r\n        id: this.formInline.id,\r\n        username: this.formInline.username,\r\n        gender: this.formInline.gender\r\n      };\r\n\r\n      // 发送 POST 请求到后端\r\n      axios.post('/users?id=${this.id}', requestData)\r\n          .then(response => {\r\n            // 请求成功，处理后端返回的数据\r\n            console.log('Response from server:', response.data);\r\n          })\r\n          .catch(error => {\r\n            // 请求失败，处理错误情况\r\n            console.error('Error:', error);\r\n          });\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n"],"mappings":"AAqFA;AACA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,UAAA;QACAC,IAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,WAAAC,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACAG,YAAAJ,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACA;IACAI,WAAAC,KAAA,EAAAC,GAAA;MACAL,OAAA,CAAAC,GAAA,CAAAG,KAAA,EAAAC,GAAA;IACA;IACAC,aAAAF,KAAA,EAAAC,GAAA;MACAL,OAAA,CAAAC,GAAA,CAAAG,KAAA,EAAAC,GAAA;IACA;IACAE,SAAA;MACA;MACA,MAAAC,WAAA;QACAC,EAAA,OAAAhB,UAAA,CAAAgB,EAAA;QACAC,QAAA,OAAAjB,UAAA,CAAAiB,QAAA;QACAC,MAAA,OAAAlB,UAAA,CAAAkB;MACA;;MAEA;MACArB,KAAA,CAAAsB,IAAA,yBAAAJ,WAAA,EACAK,IAAA,CAAAC,QAAA;QACA;QACAd,OAAA,CAAAC,GAAA,0BAAAa,QAAA,CAAAvB,IAAA;MACA,GACAwB,KAAA,CAAAC,KAAA;QACA;QACAhB,OAAA,CAAAgB,KAAA,WAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}