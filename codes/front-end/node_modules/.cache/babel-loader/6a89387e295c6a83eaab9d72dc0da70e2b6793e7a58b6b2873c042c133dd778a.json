{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      isVisible: false,\n      isVisible1: true,\n      isVisible2: false,\n      dialogEditUserVisible: false,\n      dialogEditTaskVisible: false,\n      // isCollapse: true,\n      formInline: {\n        id: '',\n        username: '',\n        gender: ''\n      },\n      tableUserData: [],\n      tableTaskData: [],\n      editedTask: {}\n    };\n  },\n  methods: {\n    handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    onClickUsers() {\n      this.isVisible = true;\n      this.isVisible1 = false;\n      this.isVisible2 = false;\n      this.fetchUserData();\n    },\n    onClickTasks() {\n      this.isVisible2 = true;\n      this.isVisible = false;\n      this.isVisible1 = false;\n      this.fetchTaskData();\n    },\n    handleEdit1(index, row) {\n      this.editedTask = {\n        ...row\n      };\n      this.dialogEditTaskVisible = true;\n    },\n    updateTask() {\n      const index = this.tableTaskData.findIndex(task => task.id === this.editedTask.id);\n      if (index !== -1) {\n        this.tableTaskData.splice(index, 1, this.editedTask);\n      }\n      this.dialogEditTaskVisible = false;\n    },\n    onSubmit() {\n      const requestData = {\n        id: this.formInline.id,\n        username: this.formInline.username,\n        gender: this.formInline.gender\n      };\n      axios.post(`/users?id=${this.formInline.id}`, requestData).then(response => {\n        console.log('Response from server:', response.data);\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    },\n    fetchTaskData() {\n      console.log('Fetching task data...'); // 增加日志\n      axios.get('http://192.168.184.1:8000/tms/task/list').then(response => {\n        console.log('Task data fetched:', response.data.data.tasks); // Log the response data\n        this.tableTaskData = response.data.data.tasks; // 确保数据路径正确\n      }).catch(error => {\n        console.error('Error fetching task data:', error);\n        if (error.response) {\n          console.error('Error response data:', error.response.data);\n        }\n      });\n    },\n    fetchUserData() {\n      axios.get('http://localhost:8000/tms/user/list').then(response => {\n        console.log('User data fetched:', response.data); // Log the response data\n        this.tableUserData = response.data.data.users; // Ensure data path is correct\n      }).catch(error => {\n        console.error('Error fetching user data:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","isVisible","isVisible1","isVisible2","dialogEditUserVisible","dialogEditTaskVisible","formInline","id","username","gender","tableUserData","tableTaskData","editedTask","methods","handleOpen","key","keyPath","console","log","handleClose","onClickUsers","fetchUserData","onClickTasks","fetchTaskData","handleEdit1","index","row","updateTask","findIndex","task","splice","onSubmit","requestData","post","then","response","catch","error","get","tasks","users"],"sources":["src/views/Element/ShowTaskView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n      <el-form-item label=\"用户id\">\r\n        <el-input v-model=\"formInline.id\" placeholder=\"id\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"用户名\">\r\n        <el-input v-model=\"formInline.username\" placeholder=\"用户名\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"性别\">\r\n        <el-select v-model=\"formInline.gender\" placeholder=\"性别\">\r\n          <el-option label=\"男\" value=\"male\"></el-option>\r\n          <el-option label=\"女\" value=\"female\"></el-option>\r\n          <el-option label=\"保密\" value=\"secret\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <!-- 导航菜单 -->\r\n    <el-row class=\"tac\">\r\n      <el-col :span=\"3\" style=\"margin-top: 5px;position: absolute\">\r\n        <el-menu default-active=\"2\" class=\"el-menu-vertical-demo\" @open=\"handleOpen\" @close=\"handleClose\">\r\n          <el-submenu index=\"1\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-location\"></i>\r\n              <span>任务管理系统</span>\r\n            </template>\r\n            <el-menu-item-group>\r\n              <el-menu-item index=\"1-1\" @click=\"onClickUsers\">用户管理</el-menu-item>\r\n              <el-menu-item index=\"1-2\" @click=\"onClickTasks\">任务管理</el-menu-item>\r\n            </el-menu-item-group>\r\n          </el-submenu>\r\n        </el-menu>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 用户管理表格 -->\r\n    <div v-if=\"isVisible\">\r\n    <el-table :data=\"tableUserData\" style=\"width: 80%;margin-left: 260px;margin-top: 5px;\">\r\n      <el-table-column label=\"id\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\"></i>\r\n          <span style=\"margin-left: 10px\">{{ scope.row.id }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"昵称\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <el-popover trigger=\"hover\" placement=\"top\">\r\n            <p>姓名: {{ scope.row.username }}</p>\r\n            <p>住址: {{ scope.row.address }}</p>\r\n            <div slot=\"reference\" class=\"name-wrapper\">\r\n              <el-tag size=\"medium\">{{ scope.row.username }}</el-tag>\r\n            </div>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"密码\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.password }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"性别\" width=\"180\">\r\n        <template v-slot=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.gender }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"电话\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.phone }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    </div>\r\n\r\n    <!-- 标题 -->\r\n    <h1 v-if=\"isVisible1\">欢迎来到任务管理系统</h1>\r\n\r\n    <!-- 任务管理表格 -->\r\n    <div v-if=\"isVisible2\">\r\n    <el-table  :data=\"tableTaskData\" style=\"width: 80%;margin-left: 260px;margin-top: 5px;\">\r\n      <el-table-column label=\"id\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.id }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"简要描述\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-popover trigger=\"hover\" placement=\"top\">\r\n            <p>描述: {{ scope.row.description }}</p>\r\n            <div slot=\"reference\" class=\"name-wrapper\">\r\n              <el-tag size=\"medium\">{{ scope.row.description }}</el-tag>\r\n            </div>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"详细描述\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.detail }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"类型\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.type }}</span>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"任务酬劳\" width=\"120\">\r\n        <template slot-scope=\"scope\">\r\n          <span style=\"margin-left: 10px\">{{ scope.row.price }}</span>\r\n        </template>\r\n      </el-table-column>\r\n<!--      <el-table-column label=\"任务发布人\" width=\"120\">-->\r\n<!--        <template slot-scope=\"scope\">-->\r\n<!--          <span style=\"margin-left: 10px\">{{ scope.row.publisher_id }}</span>-->\r\n<!--        </template>-->\r\n<!--      </el-table-column>-->\r\n      <el-table-column label=\"创建时间\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-popover trigger=\"hover\" placement=\"top\">\r\n            <p>描述: {{ scope.row.created_time }}</p>\r\n            <div slot=\"reference\" class=\"name-wrapper\">\r\n              <el-tag size=\"medium\">{{ scope.row.created_time }}</el-tag>\r\n            </div>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"更新时间\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-popover trigger=\"hover\" placement=\"top\">\r\n            <p>描述: {{ scope.row.updated_time }}</p>\r\n            <div slot=\"reference\" class=\"name-wrapper\">\r\n              <el-tag size=\"medium\">{{ scope.row.updated_time }}</el-tag>\r\n            </div>\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" size=\"mini\" @click=\"handleEdit1(scope.$index, scope.row)\">编辑</el-button>\r\n          <el-button type=\"text\" size=\"mini\" @click=\"handleDelete1(scope.$index, scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    </div>\r\n\r\n    <!-- 编辑用户对话框 -->\r\n    <el-dialog title=\"修改信息\" :visible.sync=\"dialogEditUserVisible\">\r\n      <el-form :model=\"editedData\">\r\n        <el-form-item label=\"用户名\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedData.name\" autocomplete=\"off\" placeholder=\"请输入要修改的用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedData.gender\" autocomplete=\"off\" placeholder=\"请输入性别\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedData.telephone\" autocomplete=\"off\" placeholder=\"请输入电话号码\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogEditUserVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateUser\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 编辑任务对话框 -->\r\n    <el-dialog title=\"修改任务\" :visible.sync=\"dialogEditTaskVisible\">\r\n      <el-form :model=\"editedTask\">\r\n        <el-form-item label=\"简要描述\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedTask.description\" autocomplete=\"off\" placeholder=\"请输入要修改的简要描述\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"详细描述\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedTask.detail\" autocomplete=\"off\" placeholder=\"请输入详细描述\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedTask.type\" autocomplete=\"off\" placeholder=\"请输入任务类型\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"任务酬劳\" :label-width=\"formLabelWidth\">\r\n          <el-input v-model=\"editedTask.price\" autocomplete=\"off\" placeholder=\"请输入任务酬劳\"></el-input>\r\n        </el-form-item>\r\n<!--        <el-form-item label=\"任务发布人\" :label-width=\"formLabelWidth\">-->\r\n<!--          <el-input v-model=\"editedTask.publisher_id\" autocomplete=\"off\" placeholder=\"请输入任务发布人\"></el-input>-->\r\n<!--        </el-form-item>-->\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogEditTaskVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateTask\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isVisible: false,\r\n      isVisible1: true,\r\n      isVisible2: false,\r\n      dialogEditUserVisible: false,\r\n      dialogEditTaskVisible: false,\r\n      // isCollapse: true,\r\n      formInline: {\r\n        id: '',\r\n        username: '',\r\n        gender: ''\r\n      },\r\n      tableUserData: [],\r\n      tableTaskData: [],\r\n      editedTask: {}\r\n    };\r\n  },\r\n  methods: {\r\n    handleOpen(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    handleClose(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    onClickUsers() {\r\n      this.isVisible = true;\r\n      this.isVisible1 = false;\r\n      this.isVisible2 = false;\r\n      this.fetchUserData();\r\n    },\r\n    onClickTasks() {\r\n      this.isVisible2 = true;\r\n      this.isVisible = false;\r\n      this.isVisible1 = false;\r\n      this.fetchTaskData();\r\n    },\r\n    handleEdit1(index, row) {\r\n      this.editedTask = {...row};\r\n      this.dialogEditTaskVisible = true;\r\n    },\r\n    updateTask() {\r\n      const index = this.tableTaskData.findIndex(task => task.id === this.editedTask.id);\r\n      if (index !== -1) {\r\n        this.tableTaskData.splice(index, 1, this.editedTask);\r\n      }\r\n      this.dialogEditTaskVisible = false;\r\n    },\r\n    onSubmit() {\r\n      const requestData = {\r\n        id: this.formInline.id,\r\n        username: this.formInline.username,\r\n        gender: this.formInline.gender\r\n      };\r\n\r\n      axios.post(`/users?id=${this.formInline.id}`, requestData)\r\n          .then(response => {\r\n            console.log('Response from server:', response.data);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error:', error);\r\n          });\r\n    },\r\n    fetchTaskData() {\r\n      console.log('Fetching task data...'); // 增加日志\r\n      axios.get('http://192.168.184.1:8000/tms/task/list')\r\n          .then(response => {\r\n            console.log('Task data fetched:', response.data.data.tasks); // Log the response data\r\n            this.tableTaskData = response.data.data.tasks; // 确保数据路径正确\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching task data:', error);\r\n            if (error.response) {\r\n              console.error('Error response data:', error.response.data);\r\n            }\r\n          });\r\n    },\r\n    fetchUserData() {\r\n      axios.get('http://localhost:8000/tms/user/list')\r\n          .then(response => {\r\n            console.log('User data fetched:', response.data); // Log the response data\r\n            this.tableUserData = response.data.data.users; // Ensure data path is correct\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching user data:', error);\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"mappings":"AAqMA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,UAAA;MACAC,UAAA;MACAC,qBAAA;MACAC,qBAAA;MACA;MACAC,UAAA;QACAC,EAAA;QACAC,QAAA;QACAC,MAAA;MACA;MACAC,aAAA;MACAC,aAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACAG,YAAAJ,GAAA,EAAAC,OAAA;MACAC,OAAA,CAAAC,GAAA,CAAAH,GAAA,EAAAC,OAAA;IACA;IACAI,aAAA;MACA,KAAAnB,SAAA;MACA,KAAAC,UAAA;MACA,KAAAC,UAAA;MACA,KAAAkB,aAAA;IACA;IACAC,aAAA;MACA,KAAAnB,UAAA;MACA,KAAAF,SAAA;MACA,KAAAC,UAAA;MACA,KAAAqB,aAAA;IACA;IACAC,YAAAC,KAAA,EAAAC,GAAA;MACA,KAAAd,UAAA;QAAA,GAAAc;MAAA;MACA,KAAArB,qBAAA;IACA;IACAsB,WAAA;MACA,MAAAF,KAAA,QAAAd,aAAA,CAAAiB,SAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAtB,EAAA,UAAAK,UAAA,CAAAL,EAAA;MACA,IAAAkB,KAAA;QACA,KAAAd,aAAA,CAAAmB,MAAA,CAAAL,KAAA,UAAAb,UAAA;MACA;MACA,KAAAP,qBAAA;IACA;IACA0B,SAAA;MACA,MAAAC,WAAA;QACAzB,EAAA,OAAAD,UAAA,CAAAC,EAAA;QACAC,QAAA,OAAAF,UAAA,CAAAE,QAAA;QACAC,MAAA,OAAAH,UAAA,CAAAG;MACA;MAEAV,KAAA,CAAAkC,IAAA,mBAAA3B,UAAA,CAAAC,EAAA,IAAAyB,WAAA,EACAE,IAAA,CAAAC,QAAA;QACAlB,OAAA,CAAAC,GAAA,0BAAAiB,QAAA,CAAAnC,IAAA;MACA,GACAoC,KAAA,CAAAC,KAAA;QACApB,OAAA,CAAAoB,KAAA,WAAAA,KAAA;MACA;IACA;IACAd,cAAA;MACAN,OAAA,CAAAC,GAAA;MACAnB,KAAA,CAAAuC,GAAA,4CACAJ,IAAA,CAAAC,QAAA;QACAlB,OAAA,CAAAC,GAAA,uBAAAiB,QAAA,CAAAnC,IAAA,CAAAA,IAAA,CAAAuC,KAAA;QACA,KAAA5B,aAAA,GAAAwB,QAAA,CAAAnC,IAAA,CAAAA,IAAA,CAAAuC,KAAA;MACA,GACAH,KAAA,CAAAC,KAAA;QACApB,OAAA,CAAAoB,KAAA,8BAAAA,KAAA;QACA,IAAAA,KAAA,CAAAF,QAAA;UACAlB,OAAA,CAAAoB,KAAA,yBAAAA,KAAA,CAAAF,QAAA,CAAAnC,IAAA;QACA;MACA;IACA;IACAqB,cAAA;MACAtB,KAAA,CAAAuC,GAAA,wCACAJ,IAAA,CAAAC,QAAA;QACAlB,OAAA,CAAAC,GAAA,uBAAAiB,QAAA,CAAAnC,IAAA;QACA,KAAAU,aAAA,GAAAyB,QAAA,CAAAnC,IAAA,CAAAA,IAAA,CAAAwC,KAAA;MACA,GACAJ,KAAA,CAAAC,KAAA;QACApB,OAAA,CAAAoB,KAAA,8BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}