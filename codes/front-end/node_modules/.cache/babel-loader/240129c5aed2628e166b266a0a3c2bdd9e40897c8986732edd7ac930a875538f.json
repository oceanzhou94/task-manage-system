{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Element/LoginView.vue')\n}, {\n  path: '/users',\n  name: 'Users',\n  component: () => import('../views/Element/ShowTaskView.vue'),\n  meta: {\n    requiresAuth: true\n  },\n  // 需要身份验证的路由\n  beforeEnter: (to, from, next) => {\n    // 在这里添加特定路由的逻辑\n    if (!loggedIn) {\n      next('/login'); // 如果需要登录且用户未登录，则重定向到登录页面\n    } else {\n      next(); // 继续导航\n    }\n  }\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  // 设置使用历史模式\n  routes\n});\n\n// 添加全局导航守卫\n/*router.beforeEach((to, from, next) => {\r\n  const loggedIn = localStorage.getItem('access_token'); // 确保返回布尔值并反转\r\n  console.log(`User logged in: ${loggedIn}`);\r\n  console.log(`Navigating from ${from.path} to ${to.path}`);\r\n  console.log(`Requires auth: ${to.matched.some(record => record.meta.requiresAuth)}`);\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next('/login'); // 如果未认证，重定向到登录页面\r\n  } else {\r\n    next(); // 否则，继续导航\r\n  }\r\n});*/\n\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","routes","path","name","component","meta","requiresAuth","beforeEnter","to","from","next","loggedIn","router","mode"],"sources":["H:/projects/task-manage-system/codes/front-end/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Element/LoginView.vue')\r\n  },\r\n  {\r\n    path: '/users',\r\n    name: 'Users',\r\n    component: () => import('../views/Element/ShowTaskView.vue'),\r\n    meta: { requiresAuth: true }, // 需要身份验证的路由\r\n    beforeEnter: (to, from, next) => {\r\n      // 在这里添加特定路由的逻辑\r\n      if (!loggedIn) {\r\n        next('/login'); // 如果需要登录且用户未登录，则重定向到登录页面\r\n      } else {\r\n        next(); // 继续导航\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history', // 设置使用历史模式\r\n  routes\r\n});\r\n\r\n// 添加全局导航守卫\r\n/*router.beforeEach((to, from, next) => {\r\n  const loggedIn = localStorage.getItem('access_token'); // 确保返回布尔值并反转\r\n  console.log(`User logged in: ${loggedIn}`);\r\n  console.log(`Navigating from ${from.path} to ${to.path}`);\r\n  console.log(`Requires auth: ${to.matched.some(record => record.meta.requiresAuth)}`);\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next('/login'); // 如果未认证，重定向到登录页面\r\n  } else {\r\n    next(); // 否则，继续导航\r\n  }\r\n});*/\r\n\r\n\r\n\r\n\r\n\r\nexport default router;\r\n\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAElCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;AAElB,MAAME,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC;AAC1D,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5DC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC;EAAE;EAC9BC,WAAW,EAAEA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAC/B;IACA,IAAI,CAACC,QAAQ,EAAE;MACbD,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAClB,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC,CAAC,CAAC;IACV;EACF;AACF,CAAC,CACF;AAED,MAAME,MAAM,GAAG,IAAIb,SAAS,CAAC;EAC3Bc,IAAI,EAAE,SAAS;EAAE;EACjBZ;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,eAAeW,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}