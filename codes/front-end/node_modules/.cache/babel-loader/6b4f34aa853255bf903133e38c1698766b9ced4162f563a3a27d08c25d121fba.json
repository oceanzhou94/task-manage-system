{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Element/LoginView.vue')\n}, {\n  path: '/users',\n  name: 'Users',\n  component: () => import('../views/Element/ShowTaskView.vue'),\n  meta: {\n    requiresAuth: true\n  } // 需要身份验证的路由\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  // 设置使用历史模式\n  routes\n});\n\n// 添加全局导航守卫\nrouter.beforeEach((to, from, next) => {\n  console.log('Router beforeEach triggered');\n  const loggedIn = !!sessionStorage.getItem('access_token'); // 确保返回布尔值并反转\n  console.log(`User logged in: ${loggedIn}`);\n  console.log(`Navigating from ${from.path} to ${to.path}`);\n  console.log(`Requires auth: ${to.matched.some(record => record.meta.requiresAuth)}`);\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\n    next('/login'); // 如果未认证，重定向到登录页面\n  } else {\n    next(); // 否则，继续导航\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","use","routes","path","redirect","name","component","meta","requiresAuth","router","mode","beforeEach","to","from","next","console","log","loggedIn","sessionStorage","getItem","matched","some","record"],"sources":["H:/projects/task-manage-system/codes/front-end/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    redirect: '/login'\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: () => import('../views/Element/LoginView.vue')\r\n  },\r\n  {\r\n    path: '/users',\r\n    name: 'Users',\r\n    component: () => import('../views/Element/ShowTaskView.vue'),\r\n    meta: { requiresAuth: true } // 需要身份验证的路由\r\n\r\n  }\r\n];\r\n\r\nconst router = new VueRouter({\r\n  mode: 'history', // 设置使用历史模式\r\n  routes\r\n});\r\n\r\n// 添加全局导航守卫\r\nrouter.beforeEach((to, from, next) => {\r\n  console.log('Router beforeEach triggered');\r\n  const loggedIn = !!sessionStorage.getItem('access_token'); // 确保返回布尔值并反转\r\n  console.log(`User logged in: ${loggedIn}`);\r\n  console.log(`Navigating from ${from.path} to ${to.path}`);\r\n  console.log(`Requires auth: ${to.matched.some(record => record.meta.requiresAuth)}`);\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !loggedIn) {\r\n    next('/login'); // 如果未认证，重定向到登录页面\r\n  } else {\r\n    next(); // 否则，继续导航\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default router;\r\n\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAElCD,GAAG,CAACE,GAAG,CAACD,SAAS,CAAC;AAElB,MAAME,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC;AAC1D,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,mCAAmC,CAAC;EAC5DC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAE/B,CAAC,CACF;AAED,MAAMC,MAAM,GAAG,IAAIT,SAAS,CAAC;EAC3BU,IAAI,EAAE,SAAS;EAAE;EACjBR;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1C,MAAMC,QAAQ,GAAG,CAAC,CAACC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;EAC3DJ,OAAO,CAACC,GAAG,CAAC,mBAAmBC,QAAQ,EAAE,CAAC;EAC1CF,OAAO,CAACC,GAAG,CAAC,mBAAmBH,IAAI,CAACV,IAAI,OAAOS,EAAE,CAACT,IAAI,EAAE,CAAC;EACzDY,OAAO,CAACC,GAAG,CAAC,kBAAkBJ,EAAE,CAACQ,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACf,IAAI,CAACC,YAAY,CAAC,EAAE,CAAC;EAEpF,IAAII,EAAE,CAACQ,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACf,IAAI,CAACC,YAAY,CAAC,IAAI,CAACS,QAAQ,EAAE;IACpEH,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EAClB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAMF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}